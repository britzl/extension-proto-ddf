/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: gameobject/gameobject_ddf.proto */

#ifndef PROTOBUF_C_gameobject_2fgameobject_5fddf_2eproto__INCLUDED
#define PROTOBUF_C_gameobject_2fgameobject_5fddf_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "ddf/ddf_extensions.pb-c.h"
#include "ddf/ddf_math.pb-c.h"
#include "gameobject/properties_ddf.pb-c.h"

typedef struct DmGameObjectDDF__PropertyDesc DmGameObjectDDF__PropertyDesc;
typedef struct DmGameObjectDDF__ComponentDesc DmGameObjectDDF__ComponentDesc;
typedef struct DmGameObjectDDF__EmbeddedComponentDesc DmGameObjectDDF__EmbeddedComponentDesc;
typedef struct DmGameObjectDDF__PrototypeDesc DmGameObjectDDF__PrototypeDesc;
typedef struct DmGameObjectDDF__ComponentPropertyDesc DmGameObjectDDF__ComponentPropertyDesc;
typedef struct DmGameObjectDDF__ComponenTypeDesc DmGameObjectDDF__ComponenTypeDesc;
typedef struct DmGameObjectDDF__InstanceDesc DmGameObjectDDF__InstanceDesc;
typedef struct DmGameObjectDDF__EmbeddedInstanceDesc DmGameObjectDDF__EmbeddedInstanceDesc;
typedef struct DmGameObjectDDF__InstancePropertyDesc DmGameObjectDDF__InstancePropertyDesc;
typedef struct DmGameObjectDDF__CollectionInstanceDesc DmGameObjectDDF__CollectionInstanceDesc;
typedef struct DmGameObjectDDF__CollectionDesc DmGameObjectDDF__CollectionDesc;
typedef struct DmGameObjectDDF__AcquireInputFocus DmGameObjectDDF__AcquireInputFocus;
typedef struct DmGameObjectDDF__ReleaseInputFocus DmGameObjectDDF__ReleaseInputFocus;
typedef struct DmGameObjectDDF__RequestTransform DmGameObjectDDF__RequestTransform;
typedef struct DmGameObjectDDF__TransformResponse DmGameObjectDDF__TransformResponse;
typedef struct DmGameObjectDDF__SetParent DmGameObjectDDF__SetParent;
typedef struct DmGameObjectDDF__Enable DmGameObjectDDF__Enable;
typedef struct DmGameObjectDDF__Disable DmGameObjectDDF__Disable;
typedef struct DmGameObjectDDF__ScriptMessage DmGameObjectDDF__ScriptMessage;


/* --- enums --- */

/*
 * This must match with enum PropertyType in gameobject.h 
 */
typedef enum _DmGameObjectDDF__PropertyType {
  DM_GAME_OBJECT_DDF__PROPERTY_TYPE__PROPERTY_TYPE_NUMBER = 0,
  DM_GAME_OBJECT_DDF__PROPERTY_TYPE__PROPERTY_TYPE_HASH = 1,
  DM_GAME_OBJECT_DDF__PROPERTY_TYPE__PROPERTY_TYPE_URL = 2,
  DM_GAME_OBJECT_DDF__PROPERTY_TYPE__PROPERTY_TYPE_VECTOR3 = 3,
  DM_GAME_OBJECT_DDF__PROPERTY_TYPE__PROPERTY_TYPE_VECTOR4 = 4,
  DM_GAME_OBJECT_DDF__PROPERTY_TYPE__PROPERTY_TYPE_QUAT = 5,
  DM_GAME_OBJECT_DDF__PROPERTY_TYPE__PROPERTY_TYPE_BOOLEAN = 6,
  DM_GAME_OBJECT_DDF__PROPERTY_TYPE__PROPERTY_TYPE_MATRIX4 = 7,
  DM_GAME_OBJECT_DDF__PROPERTY_TYPE__PROPERTY_TYPE_COUNT = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DM_GAME_OBJECT_DDF__PROPERTY_TYPE)
} DmGameObjectDDF__PropertyType;

/* --- messages --- */

struct  DmGameObjectDDF__PropertyDesc
{
  ProtobufCMessage base;
  char *id;
  char *value;
  DmGameObjectDDF__PropertyType type;
};
#define DM_GAME_OBJECT_DDF__PROPERTY_DESC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__property_desc__descriptor) \
    , NULL, NULL, DM_GAME_OBJECT_DDF__PROPERTY_TYPE__PROPERTY_TYPE_NUMBER }


struct  DmGameObjectDDF__ComponentDesc
{
  ProtobufCMessage base;
  char *id;
  char *component;
  DmMath__Point3 *position;
  DmMath__Quat *rotation;
  size_t n_properties;
  DmGameObjectDDF__PropertyDesc **properties;
  DmPropertiesDDF__PropertyDeclarations *property_decls;
  DmMath__Vector3 *scale;
};
#define DM_GAME_OBJECT_DDF__COMPONENT_DESC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__component_desc__descriptor) \
    , NULL, NULL, NULL, NULL, 0,NULL, NULL, NULL }


struct  DmGameObjectDDF__EmbeddedComponentDesc
{
  ProtobufCMessage base;
  char *id;
  char *type;
  char *data;
  DmMath__Point3 *position;
  DmMath__Quat *rotation;
  DmMath__Vector3 *scale;
};
#define DM_GAME_OBJECT_DDF__EMBEDDED_COMPONENT_DESC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__embedded_component_desc__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL }


struct  DmGameObjectDDF__PrototypeDesc
{
  ProtobufCMessage base;
  size_t n_components;
  DmGameObjectDDF__ComponentDesc **components;
  size_t n_embedded_components;
  DmGameObjectDDF__EmbeddedComponentDesc **embedded_components;
  size_t n_property_resources;
  char **property_resources;
};
#define DM_GAME_OBJECT_DDF__PROTOTYPE_DESC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__prototype_desc__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL }


struct  DmGameObjectDDF__ComponentPropertyDesc
{
  ProtobufCMessage base;
  char *id;
  size_t n_properties;
  DmGameObjectDDF__PropertyDesc **properties;
  DmPropertiesDDF__PropertyDeclarations *property_decls;
};
#define DM_GAME_OBJECT_DDF__COMPONENT_PROPERTY_DESC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__component_property_desc__descriptor) \
    , NULL, 0,NULL, NULL }


struct  DmGameObjectDDF__ComponenTypeDesc
{
  ProtobufCMessage base;
  uint64_t name_hash;
  uint32_t max_count;
};
#define DM_GAME_OBJECT_DDF__COMPONEN_TYPE_DESC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__componen_type_desc__descriptor) \
    , 0, 0 }


struct  DmGameObjectDDF__InstanceDesc
{
  ProtobufCMessage base;
  char *id;
  char *prototype;
  size_t n_children;
  char **children;
  DmMath__Point3 *position;
  DmMath__Quat *rotation;
  size_t n_component_properties;
  DmGameObjectDDF__ComponentPropertyDesc **component_properties;
  protobuf_c_boolean has_scale;
  float scale;
  DmMath__Vector3 *scale3;
};
#define DM_GAME_OBJECT_DDF__INSTANCE_DESC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__instance_desc__descriptor) \
    , NULL, NULL, 0,NULL, NULL, NULL, 0,NULL, 0, 1, NULL }


struct  DmGameObjectDDF__EmbeddedInstanceDesc
{
  ProtobufCMessage base;
  char *id;
  size_t n_children;
  char **children;
  char *data;
  DmMath__Point3 *position;
  DmMath__Quat *rotation;
  size_t n_component_properties;
  DmGameObjectDDF__ComponentPropertyDesc **component_properties;
  protobuf_c_boolean has_scale;
  float scale;
  DmMath__Vector3 *scale3;
};
#define DM_GAME_OBJECT_DDF__EMBEDDED_INSTANCE_DESC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__embedded_instance_desc__descriptor) \
    , NULL, 0,NULL, NULL, NULL, NULL, 0,NULL, 0, 1, NULL }


struct  DmGameObjectDDF__InstancePropertyDesc
{
  ProtobufCMessage base;
  char *id;
  size_t n_properties;
  DmGameObjectDDF__ComponentPropertyDesc **properties;
};
#define DM_GAME_OBJECT_DDF__INSTANCE_PROPERTY_DESC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__instance_property_desc__descriptor) \
    , NULL, 0,NULL }


struct  DmGameObjectDDF__CollectionInstanceDesc
{
  ProtobufCMessage base;
  char *id;
  char *collection;
  DmMath__Point3 *position;
  DmMath__Quat *rotation;
  protobuf_c_boolean has_scale;
  float scale;
  DmMath__Vector3 *scale3;
  size_t n_instance_properties;
  DmGameObjectDDF__InstancePropertyDesc **instance_properties;
};
#define DM_GAME_OBJECT_DDF__COLLECTION_INSTANCE_DESC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__collection_instance_desc__descriptor) \
    , NULL, NULL, NULL, NULL, 0, 1, NULL, 0,NULL }


struct  DmGameObjectDDF__CollectionDesc
{
  ProtobufCMessage base;
  char *name;
  size_t n_instances;
  DmGameObjectDDF__InstanceDesc **instances;
  size_t n_collection_instances;
  DmGameObjectDDF__CollectionInstanceDesc **collection_instances;
  protobuf_c_boolean has_scale_along_z;
  uint32_t scale_along_z;
  size_t n_embedded_instances;
  DmGameObjectDDF__EmbeddedInstanceDesc **embedded_instances;
  size_t n_property_resources;
  char **property_resources;
  size_t n_component_types;
  DmGameObjectDDF__ComponenTypeDesc **component_types;
};
#define DM_GAME_OBJECT_DDF__COLLECTION_DESC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__collection_desc__descriptor) \
    , NULL, 0,NULL, 0,NULL, 0, 0u, 0,NULL, 0,NULL, 0,NULL }


/*
 *# acquires the user input focus
 * Post this message to a game object instance to make that instance acquire the user input focus.
 * User input is distributed by the engine to every instance that has 
 * requested it. The last instance to request focus will receive it first.
 * This means that the scripts in the instance will have first-hand-chance
 * at reacting on user input, possibly consuming it (by returning 
 * <code>true</code> from <code>on_input</code>) so that no other instances
 * can react on it. The most common case is for a script to send this message
 * to itself when it needs to respond to user input.
 * A script belonging to an instance which has the user input focus will
 * receive the input actions in its <code>on_input</code> callback function. 
 * See [ref:on_input] for more information on how user input can be
 * handled.
 * @message
 * @name acquire_input_focus
 * @examples
 * This example demonstrates how to acquire and act on user input.
 * ```lua
 * function init(self)
 *     -- acquire input focus as soon as the instance has been initialized
 *     msg.post(".", "acquire_input_focus")
 * end
 * function on_input(self, action_id, action)
 *     -- check which input we received
 *     if action_id == hash("my_action") then
 *         -- act on the input
 *         self.my_action_amount = action.value
 *     end
 * end
 * ```
 */
struct  DmGameObjectDDF__AcquireInputFocus
{
  ProtobufCMessage base;
};
#define DM_GAME_OBJECT_DDF__ACQUIRE_INPUT_FOCUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__acquire_input_focus__descriptor) \
     }


/*
 *# releases the user input focus
 * Post this message to an instance to make that instance release the user input focus.
 * See [ref:acquire_input_focus] for more information on how the user input handling
 * works.
 * @message
 * @name release_input_focus
 * @examples
 * How to make a game object stop receiving input:
 * ```lua
 * msg.post(".", "release_input_focus")
 * ```
 */
struct  DmGameObjectDDF__ReleaseInputFocus
{
  ProtobufCMessage base;
};
#define DM_GAME_OBJECT_DDF__RELEASE_INPUT_FOCUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__release_input_focus__descriptor) \
     }


/*
 * DEPRECATED. OMITTED FROM API DOCS.
 * requests the transform from an instance
 * <div><b>DEPRECATED!</b> See the functions <code>go.get_position</code>, <code>go.get_rotation</code>, etc. for a simpler way to obtain the transform of another game object instance.</div>
 * Send this message to an instance to request its transform (position, rotation, scale).
 * The sending script will receive the answer as a <code>transform_response</code>-message
 * at a later time.
 * @message
 * @name request_transform
 * @examples
 * <p>
 * How to obtain the position of another game object instance:
 * </p>
 * <pre>
 * function init(self)
 *     -- create a url to the interesting instance for later use, assuming the instance has id "my_friend_instance"
 *     self.friend_url = msg.url("my_friend_instance")
 * end
 * function update(self, dt)
 *     -- request the transform
 *     msg.post(self.friend_url, "request_transform")
 *     -- check if we have received the position yet
 *     if self.my_friends_position then
 *         -- do something useful with the position
 *     end
 * end
 * function on_message(self, message_id, message, sender)
 *     -- check if its the transform response
 *     if message_id == hash("transform_response") then
 *         -- if it comes from the right instance (in case we send out several queries to different instances)
 *         if sender == self.friend_url then
 *             -- store the position so we can use it in the update-function
 *             self.my_friends_position = message.position
 *         end
 *     end
 * end
 * </pre>
 */
struct  DmGameObjectDDF__RequestTransform
{
  ProtobufCMessage base;
};
#define DM_GAME_OBJECT_DDF__REQUEST_TRANSFORM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__request_transform__descriptor) \
     }


/*
 * DEPRECATED. OMITTED FROM API DOCS.
 * reports back the transform of an instance
 * <div><b>DEPRECATED!</b> See the functions <code>go.get_position</code>, <code>go.get_rotation</code>, etc. for a simpler way to obtain the transform of another game object instance.</div>
 * The response a script receives after it has requested the transform from an instance
 * using the <code>request_transform</code>-message. See the description of that message
 * for a complete example on how to use it.
 * @message
 * @name transform_response
 * @param position local position of the instance (vector3)
 * @param rotation local rotation of the instance (quaternion)
 * @param scale local scale of the instance (number)
 * @param world_position world position of the instance (vector3)
 * @param world_rotation world rotation of the instancee (quaternion)
 * @param world_scale world scale of the instance (number)
 */
struct  DmGameObjectDDF__TransformResponse
{
  ProtobufCMessage base;
  DmMath__Point3 *position;
  DmMath__Quat *rotation;
  DmMath__Point3 *world_position;
  DmMath__Quat *world_rotation;
  protobuf_c_boolean has_scale;
  float scale;
  DmMath__Vector3 *scale3;
  protobuf_c_boolean has_world_scale;
  float world_scale;
  DmMath__Vector3 *world_scale3;
};
#define DM_GAME_OBJECT_DDF__TRANSFORM_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__transform_response__descriptor) \
    , NULL, NULL, NULL, NULL, 0, 1, NULL, 0, 1, NULL }


/*
 *# sets the parent of the receiving instance
 * When this message is sent to an instance, it sets the parent of that instance. This means that the instance will exist
 * in the geometrical space of its parent, like a basic transformation hierarchy or scene graph. If no parent is specified,
 * the instance will be detached from any parent and exist in world space. A script can send this message to itself to set
 * the parent of its instance.
 * @message
 * @name set_parent
 * @param parent_id [type:hash] the id of the new parent
 * @param keep_world_transform [type:number] if the world transform of the instance should be preserved when changing spaces, 0 for false and 1 for true. The default value is 1.
 * @examples
 * Attach myself to another instance "my_parent":
 * ```lua
 * msg.post(".", "set_parent", {parent_id = go.get_id("my_parent")})
 * ```
 * Attach an instance "my_instance" to another instance "my_parent":
 * ```lua
 * msg.post("my_instance", "set_parent", {parent_id = go.get_id("my_parent")})
 * ```
 * Detach an instance "my_instance" from its parent (if any):
 * ```lua
 * msg.post("my_instance", "set_parent")
 * ```
 */
struct  DmGameObjectDDF__SetParent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_parent_id;
  uint64_t parent_id;
  protobuf_c_boolean has_keep_world_transform;
  uint32_t keep_world_transform;
};
#define DM_GAME_OBJECT_DDF__SET_PARENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__set_parent__descriptor) \
    , 0, 0ull, 0, 1u }


/*
 *# enables the receiving component
 * This message enables the receiving component. All components are enabled by default, which means they will receive input, updates
 * and be a part of the simulation. A component is disabled when it receives the <code>disable</code> message.
 * [icon:alert] Components that currently supports this message are:
 * - Collection Proxy
 * - Collision Object
 * - Gui
 * - Label
 * - Spine Model
 * - Sprite
 * - Tile Grid
 * - Model
 * - Mesh
 * @message
 * @name enable
 * @examples
 * Enable the component "my_component":
 * ```lua
 * msg.post("#my_component", "enable")
 * ```
 */
struct  DmGameObjectDDF__Enable
{
  ProtobufCMessage base;
};
#define DM_GAME_OBJECT_DDF__ENABLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__enable__descriptor) \
     }


/*
 *# disables the receiving component
 * This message disables the receiving component. All components are enabled by default, which means they will receive input, updates
 * and be a part of the simulation. A component is disabled when it receives the <code>disable</code> message.
 * [icon:alert] Components that currently supports this message are:
 * - Collection Proxy
 * - Collision Object
 * - Gui
 * - Label
 * - Spine Model
 * - Sprite
 * - Tile Grid
 * - Model
 * - Mesh
 * @message
 * @name disable
 * @examples
 * Disable the component "my_component":
 * ```lua
 * msg.post("#my_component", "disable")
 * ```
 */
struct  DmGameObjectDDF__Disable
{
  ProtobufCMessage base;
};
#define DM_GAME_OBJECT_DDF__DISABLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__disable__descriptor) \
     }


/*
 * Script message wrapper for added typesafety
 */
struct  DmGameObjectDDF__ScriptMessage
{
  ProtobufCMessage base;
  /*
   * The descriptor name hash of the message
   */
  uint64_t descriptor_hash;
  /*
   * The payload ddf message. The payload will begin directly after this message
   */
  uint32_t payload_size;
  /*
   * If 0, it will call the "on_message" function
   */
  protobuf_c_boolean has_function;
  uint32_t function;
  /*
   * unreference function after call
   */
  protobuf_c_boolean has_unref_function;
  protobuf_c_boolean unref_function;
};
#define DM_GAME_OBJECT_DDF__SCRIPT_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_object_ddf__script_message__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


/* DmGameObjectDDF__PropertyDesc methods */
void   dm_game_object_ddf__property_desc__init
                     (DmGameObjectDDF__PropertyDesc         *message);
size_t dm_game_object_ddf__property_desc__get_packed_size
                     (const DmGameObjectDDF__PropertyDesc   *message);
size_t dm_game_object_ddf__property_desc__pack
                     (const DmGameObjectDDF__PropertyDesc   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__property_desc__pack_to_buffer
                     (const DmGameObjectDDF__PropertyDesc   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__PropertyDesc *
       dm_game_object_ddf__property_desc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__property_desc__free_unpacked
                     (DmGameObjectDDF__PropertyDesc *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__ComponentDesc methods */
void   dm_game_object_ddf__component_desc__init
                     (DmGameObjectDDF__ComponentDesc         *message);
size_t dm_game_object_ddf__component_desc__get_packed_size
                     (const DmGameObjectDDF__ComponentDesc   *message);
size_t dm_game_object_ddf__component_desc__pack
                     (const DmGameObjectDDF__ComponentDesc   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__component_desc__pack_to_buffer
                     (const DmGameObjectDDF__ComponentDesc   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__ComponentDesc *
       dm_game_object_ddf__component_desc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__component_desc__free_unpacked
                     (DmGameObjectDDF__ComponentDesc *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__EmbeddedComponentDesc methods */
void   dm_game_object_ddf__embedded_component_desc__init
                     (DmGameObjectDDF__EmbeddedComponentDesc         *message);
size_t dm_game_object_ddf__embedded_component_desc__get_packed_size
                     (const DmGameObjectDDF__EmbeddedComponentDesc   *message);
size_t dm_game_object_ddf__embedded_component_desc__pack
                     (const DmGameObjectDDF__EmbeddedComponentDesc   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__embedded_component_desc__pack_to_buffer
                     (const DmGameObjectDDF__EmbeddedComponentDesc   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__EmbeddedComponentDesc *
       dm_game_object_ddf__embedded_component_desc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__embedded_component_desc__free_unpacked
                     (DmGameObjectDDF__EmbeddedComponentDesc *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__PrototypeDesc methods */
void   dm_game_object_ddf__prototype_desc__init
                     (DmGameObjectDDF__PrototypeDesc         *message);
size_t dm_game_object_ddf__prototype_desc__get_packed_size
                     (const DmGameObjectDDF__PrototypeDesc   *message);
size_t dm_game_object_ddf__prototype_desc__pack
                     (const DmGameObjectDDF__PrototypeDesc   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__prototype_desc__pack_to_buffer
                     (const DmGameObjectDDF__PrototypeDesc   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__PrototypeDesc *
       dm_game_object_ddf__prototype_desc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__prototype_desc__free_unpacked
                     (DmGameObjectDDF__PrototypeDesc *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__ComponentPropertyDesc methods */
void   dm_game_object_ddf__component_property_desc__init
                     (DmGameObjectDDF__ComponentPropertyDesc         *message);
size_t dm_game_object_ddf__component_property_desc__get_packed_size
                     (const DmGameObjectDDF__ComponentPropertyDesc   *message);
size_t dm_game_object_ddf__component_property_desc__pack
                     (const DmGameObjectDDF__ComponentPropertyDesc   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__component_property_desc__pack_to_buffer
                     (const DmGameObjectDDF__ComponentPropertyDesc   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__ComponentPropertyDesc *
       dm_game_object_ddf__component_property_desc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__component_property_desc__free_unpacked
                     (DmGameObjectDDF__ComponentPropertyDesc *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__ComponenTypeDesc methods */
void   dm_game_object_ddf__componen_type_desc__init
                     (DmGameObjectDDF__ComponenTypeDesc         *message);
size_t dm_game_object_ddf__componen_type_desc__get_packed_size
                     (const DmGameObjectDDF__ComponenTypeDesc   *message);
size_t dm_game_object_ddf__componen_type_desc__pack
                     (const DmGameObjectDDF__ComponenTypeDesc   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__componen_type_desc__pack_to_buffer
                     (const DmGameObjectDDF__ComponenTypeDesc   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__ComponenTypeDesc *
       dm_game_object_ddf__componen_type_desc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__componen_type_desc__free_unpacked
                     (DmGameObjectDDF__ComponenTypeDesc *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__InstanceDesc methods */
void   dm_game_object_ddf__instance_desc__init
                     (DmGameObjectDDF__InstanceDesc         *message);
size_t dm_game_object_ddf__instance_desc__get_packed_size
                     (const DmGameObjectDDF__InstanceDesc   *message);
size_t dm_game_object_ddf__instance_desc__pack
                     (const DmGameObjectDDF__InstanceDesc   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__instance_desc__pack_to_buffer
                     (const DmGameObjectDDF__InstanceDesc   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__InstanceDesc *
       dm_game_object_ddf__instance_desc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__instance_desc__free_unpacked
                     (DmGameObjectDDF__InstanceDesc *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__EmbeddedInstanceDesc methods */
void   dm_game_object_ddf__embedded_instance_desc__init
                     (DmGameObjectDDF__EmbeddedInstanceDesc         *message);
size_t dm_game_object_ddf__embedded_instance_desc__get_packed_size
                     (const DmGameObjectDDF__EmbeddedInstanceDesc   *message);
size_t dm_game_object_ddf__embedded_instance_desc__pack
                     (const DmGameObjectDDF__EmbeddedInstanceDesc   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__embedded_instance_desc__pack_to_buffer
                     (const DmGameObjectDDF__EmbeddedInstanceDesc   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__EmbeddedInstanceDesc *
       dm_game_object_ddf__embedded_instance_desc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__embedded_instance_desc__free_unpacked
                     (DmGameObjectDDF__EmbeddedInstanceDesc *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__InstancePropertyDesc methods */
void   dm_game_object_ddf__instance_property_desc__init
                     (DmGameObjectDDF__InstancePropertyDesc         *message);
size_t dm_game_object_ddf__instance_property_desc__get_packed_size
                     (const DmGameObjectDDF__InstancePropertyDesc   *message);
size_t dm_game_object_ddf__instance_property_desc__pack
                     (const DmGameObjectDDF__InstancePropertyDesc   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__instance_property_desc__pack_to_buffer
                     (const DmGameObjectDDF__InstancePropertyDesc   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__InstancePropertyDesc *
       dm_game_object_ddf__instance_property_desc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__instance_property_desc__free_unpacked
                     (DmGameObjectDDF__InstancePropertyDesc *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__CollectionInstanceDesc methods */
void   dm_game_object_ddf__collection_instance_desc__init
                     (DmGameObjectDDF__CollectionInstanceDesc         *message);
size_t dm_game_object_ddf__collection_instance_desc__get_packed_size
                     (const DmGameObjectDDF__CollectionInstanceDesc   *message);
size_t dm_game_object_ddf__collection_instance_desc__pack
                     (const DmGameObjectDDF__CollectionInstanceDesc   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__collection_instance_desc__pack_to_buffer
                     (const DmGameObjectDDF__CollectionInstanceDesc   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__CollectionInstanceDesc *
       dm_game_object_ddf__collection_instance_desc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__collection_instance_desc__free_unpacked
                     (DmGameObjectDDF__CollectionInstanceDesc *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__CollectionDesc methods */
void   dm_game_object_ddf__collection_desc__init
                     (DmGameObjectDDF__CollectionDesc         *message);
size_t dm_game_object_ddf__collection_desc__get_packed_size
                     (const DmGameObjectDDF__CollectionDesc   *message);
size_t dm_game_object_ddf__collection_desc__pack
                     (const DmGameObjectDDF__CollectionDesc   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__collection_desc__pack_to_buffer
                     (const DmGameObjectDDF__CollectionDesc   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__CollectionDesc *
       dm_game_object_ddf__collection_desc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__collection_desc__free_unpacked
                     (DmGameObjectDDF__CollectionDesc *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__AcquireInputFocus methods */
void   dm_game_object_ddf__acquire_input_focus__init
                     (DmGameObjectDDF__AcquireInputFocus         *message);
size_t dm_game_object_ddf__acquire_input_focus__get_packed_size
                     (const DmGameObjectDDF__AcquireInputFocus   *message);
size_t dm_game_object_ddf__acquire_input_focus__pack
                     (const DmGameObjectDDF__AcquireInputFocus   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__acquire_input_focus__pack_to_buffer
                     (const DmGameObjectDDF__AcquireInputFocus   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__AcquireInputFocus *
       dm_game_object_ddf__acquire_input_focus__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__acquire_input_focus__free_unpacked
                     (DmGameObjectDDF__AcquireInputFocus *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__ReleaseInputFocus methods */
void   dm_game_object_ddf__release_input_focus__init
                     (DmGameObjectDDF__ReleaseInputFocus         *message);
size_t dm_game_object_ddf__release_input_focus__get_packed_size
                     (const DmGameObjectDDF__ReleaseInputFocus   *message);
size_t dm_game_object_ddf__release_input_focus__pack
                     (const DmGameObjectDDF__ReleaseInputFocus   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__release_input_focus__pack_to_buffer
                     (const DmGameObjectDDF__ReleaseInputFocus   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__ReleaseInputFocus *
       dm_game_object_ddf__release_input_focus__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__release_input_focus__free_unpacked
                     (DmGameObjectDDF__ReleaseInputFocus *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__RequestTransform methods */
void   dm_game_object_ddf__request_transform__init
                     (DmGameObjectDDF__RequestTransform         *message);
size_t dm_game_object_ddf__request_transform__get_packed_size
                     (const DmGameObjectDDF__RequestTransform   *message);
size_t dm_game_object_ddf__request_transform__pack
                     (const DmGameObjectDDF__RequestTransform   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__request_transform__pack_to_buffer
                     (const DmGameObjectDDF__RequestTransform   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__RequestTransform *
       dm_game_object_ddf__request_transform__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__request_transform__free_unpacked
                     (DmGameObjectDDF__RequestTransform *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__TransformResponse methods */
void   dm_game_object_ddf__transform_response__init
                     (DmGameObjectDDF__TransformResponse         *message);
size_t dm_game_object_ddf__transform_response__get_packed_size
                     (const DmGameObjectDDF__TransformResponse   *message);
size_t dm_game_object_ddf__transform_response__pack
                     (const DmGameObjectDDF__TransformResponse   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__transform_response__pack_to_buffer
                     (const DmGameObjectDDF__TransformResponse   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__TransformResponse *
       dm_game_object_ddf__transform_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__transform_response__free_unpacked
                     (DmGameObjectDDF__TransformResponse *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__SetParent methods */
void   dm_game_object_ddf__set_parent__init
                     (DmGameObjectDDF__SetParent         *message);
size_t dm_game_object_ddf__set_parent__get_packed_size
                     (const DmGameObjectDDF__SetParent   *message);
size_t dm_game_object_ddf__set_parent__pack
                     (const DmGameObjectDDF__SetParent   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__set_parent__pack_to_buffer
                     (const DmGameObjectDDF__SetParent   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__SetParent *
       dm_game_object_ddf__set_parent__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__set_parent__free_unpacked
                     (DmGameObjectDDF__SetParent *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__Enable methods */
void   dm_game_object_ddf__enable__init
                     (DmGameObjectDDF__Enable         *message);
size_t dm_game_object_ddf__enable__get_packed_size
                     (const DmGameObjectDDF__Enable   *message);
size_t dm_game_object_ddf__enable__pack
                     (const DmGameObjectDDF__Enable   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__enable__pack_to_buffer
                     (const DmGameObjectDDF__Enable   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__Enable *
       dm_game_object_ddf__enable__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__enable__free_unpacked
                     (DmGameObjectDDF__Enable *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__Disable methods */
void   dm_game_object_ddf__disable__init
                     (DmGameObjectDDF__Disable         *message);
size_t dm_game_object_ddf__disable__get_packed_size
                     (const DmGameObjectDDF__Disable   *message);
size_t dm_game_object_ddf__disable__pack
                     (const DmGameObjectDDF__Disable   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__disable__pack_to_buffer
                     (const DmGameObjectDDF__Disable   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__Disable *
       dm_game_object_ddf__disable__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__disable__free_unpacked
                     (DmGameObjectDDF__Disable *message,
                      ProtobufCAllocator *allocator);
/* DmGameObjectDDF__ScriptMessage methods */
void   dm_game_object_ddf__script_message__init
                     (DmGameObjectDDF__ScriptMessage         *message);
size_t dm_game_object_ddf__script_message__get_packed_size
                     (const DmGameObjectDDF__ScriptMessage   *message);
size_t dm_game_object_ddf__script_message__pack
                     (const DmGameObjectDDF__ScriptMessage   *message,
                      uint8_t             *out);
size_t dm_game_object_ddf__script_message__pack_to_buffer
                     (const DmGameObjectDDF__ScriptMessage   *message,
                      ProtobufCBuffer     *buffer);
DmGameObjectDDF__ScriptMessage *
       dm_game_object_ddf__script_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_object_ddf__script_message__free_unpacked
                     (DmGameObjectDDF__ScriptMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DmGameObjectDDF__PropertyDesc_Closure)
                 (const DmGameObjectDDF__PropertyDesc *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__ComponentDesc_Closure)
                 (const DmGameObjectDDF__ComponentDesc *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__EmbeddedComponentDesc_Closure)
                 (const DmGameObjectDDF__EmbeddedComponentDesc *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__PrototypeDesc_Closure)
                 (const DmGameObjectDDF__PrototypeDesc *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__ComponentPropertyDesc_Closure)
                 (const DmGameObjectDDF__ComponentPropertyDesc *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__ComponenTypeDesc_Closure)
                 (const DmGameObjectDDF__ComponenTypeDesc *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__InstanceDesc_Closure)
                 (const DmGameObjectDDF__InstanceDesc *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__EmbeddedInstanceDesc_Closure)
                 (const DmGameObjectDDF__EmbeddedInstanceDesc *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__InstancePropertyDesc_Closure)
                 (const DmGameObjectDDF__InstancePropertyDesc *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__CollectionInstanceDesc_Closure)
                 (const DmGameObjectDDF__CollectionInstanceDesc *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__CollectionDesc_Closure)
                 (const DmGameObjectDDF__CollectionDesc *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__AcquireInputFocus_Closure)
                 (const DmGameObjectDDF__AcquireInputFocus *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__ReleaseInputFocus_Closure)
                 (const DmGameObjectDDF__ReleaseInputFocus *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__RequestTransform_Closure)
                 (const DmGameObjectDDF__RequestTransform *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__TransformResponse_Closure)
                 (const DmGameObjectDDF__TransformResponse *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__SetParent_Closure)
                 (const DmGameObjectDDF__SetParent *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__Enable_Closure)
                 (const DmGameObjectDDF__Enable *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__Disable_Closure)
                 (const DmGameObjectDDF__Disable *message,
                  void *closure_data);
typedef void (*DmGameObjectDDF__ScriptMessage_Closure)
                 (const DmGameObjectDDF__ScriptMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    dm_game_object_ddf__property_type__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__property_desc__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__component_desc__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__embedded_component_desc__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__prototype_desc__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__component_property_desc__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__componen_type_desc__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__instance_desc__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__embedded_instance_desc__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__instance_property_desc__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__collection_instance_desc__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__collection_desc__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__acquire_input_focus__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__release_input_focus__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__request_transform__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__transform_response__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__set_parent__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__enable__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__disable__descriptor;
extern const ProtobufCMessageDescriptor dm_game_object_ddf__script_message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_gameobject_2fgameobject_5fddf_2eproto__INCLUDED */

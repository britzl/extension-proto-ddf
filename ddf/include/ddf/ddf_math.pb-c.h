/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ddf/ddf_math.proto */

#ifndef PROTOBUF_C_ddf_2fddf_5fmath_2eproto__INCLUDED
#define PROTOBUF_C_ddf_2fddf_5fmath_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "ddf/ddf_extensions.pb-c.h"

typedef struct DmMath__Point3 DmMath__Point3;
typedef struct DmMath__Vector3 DmMath__Vector3;
typedef struct DmMath__Vector4 DmMath__Vector4;
typedef struct DmMath__Quat DmMath__Quat;
typedef struct DmMath__Transform DmMath__Transform;
typedef struct DmMath__Matrix4 DmMath__Matrix4;


/* --- enums --- */


/* --- messages --- */

struct  DmMath__Point3
{
  ProtobufCMessage base;
  protobuf_c_boolean has_x;
  float x;
  protobuf_c_boolean has_y;
  float y;
  protobuf_c_boolean has_z;
  float z;
  protobuf_c_boolean has_d;
  float d;
};
#define DM_MATH__POINT3__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_math__point3__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0 }


struct  DmMath__Vector3
{
  ProtobufCMessage base;
  protobuf_c_boolean has_x;
  float x;
  protobuf_c_boolean has_y;
  float y;
  protobuf_c_boolean has_z;
  float z;
  protobuf_c_boolean has_d;
  float d;
};
#define DM_MATH__VECTOR3__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_math__vector3__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0 }


struct  DmMath__Vector4
{
  ProtobufCMessage base;
  protobuf_c_boolean has_x;
  float x;
  protobuf_c_boolean has_y;
  float y;
  protobuf_c_boolean has_z;
  float z;
  protobuf_c_boolean has_w;
  float w;
};
#define DM_MATH__VECTOR4__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_math__vector4__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0 }


struct  DmMath__Quat
{
  ProtobufCMessage base;
  protobuf_c_boolean has_x;
  float x;
  protobuf_c_boolean has_y;
  float y;
  protobuf_c_boolean has_z;
  float z;
  protobuf_c_boolean has_w;
  float w;
};
#define DM_MATH__QUAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_math__quat__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 1 }


struct  DmMath__Transform
{
  ProtobufCMessage base;
  DmMath__Quat *rotation;
  DmMath__Vector3 *translation;
  DmMath__Vector3 *scale;
};
#define DM_MATH__TRANSFORM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_math__transform__descriptor) \
    , NULL, NULL, NULL }


struct  DmMath__Matrix4
{
  ProtobufCMessage base;
  protobuf_c_boolean has_m00;
  float m00;
  protobuf_c_boolean has_m01;
  float m01;
  protobuf_c_boolean has_m02;
  float m02;
  protobuf_c_boolean has_m03;
  float m03;
  protobuf_c_boolean has_m10;
  float m10;
  protobuf_c_boolean has_m11;
  float m11;
  protobuf_c_boolean has_m12;
  float m12;
  protobuf_c_boolean has_m13;
  float m13;
  protobuf_c_boolean has_m20;
  float m20;
  protobuf_c_boolean has_m21;
  float m21;
  protobuf_c_boolean has_m22;
  float m22;
  protobuf_c_boolean has_m23;
  float m23;
  protobuf_c_boolean has_m30;
  float m30;
  protobuf_c_boolean has_m31;
  float m31;
  protobuf_c_boolean has_m32;
  float m32;
  protobuf_c_boolean has_m33;
  float m33;
};
#define DM_MATH__MATRIX4__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_math__matrix4__descriptor) \
    , 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 }


/* DmMath__Point3 methods */
void   dm_math__point3__init
                     (DmMath__Point3         *message);
size_t dm_math__point3__get_packed_size
                     (const DmMath__Point3   *message);
size_t dm_math__point3__pack
                     (const DmMath__Point3   *message,
                      uint8_t             *out);
size_t dm_math__point3__pack_to_buffer
                     (const DmMath__Point3   *message,
                      ProtobufCBuffer     *buffer);
DmMath__Point3 *
       dm_math__point3__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_math__point3__free_unpacked
                     (DmMath__Point3 *message,
                      ProtobufCAllocator *allocator);
/* DmMath__Vector3 methods */
void   dm_math__vector3__init
                     (DmMath__Vector3         *message);
size_t dm_math__vector3__get_packed_size
                     (const DmMath__Vector3   *message);
size_t dm_math__vector3__pack
                     (const DmMath__Vector3   *message,
                      uint8_t             *out);
size_t dm_math__vector3__pack_to_buffer
                     (const DmMath__Vector3   *message,
                      ProtobufCBuffer     *buffer);
DmMath__Vector3 *
       dm_math__vector3__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_math__vector3__free_unpacked
                     (DmMath__Vector3 *message,
                      ProtobufCAllocator *allocator);
/* DmMath__Vector4 methods */
void   dm_math__vector4__init
                     (DmMath__Vector4         *message);
size_t dm_math__vector4__get_packed_size
                     (const DmMath__Vector4   *message);
size_t dm_math__vector4__pack
                     (const DmMath__Vector4   *message,
                      uint8_t             *out);
size_t dm_math__vector4__pack_to_buffer
                     (const DmMath__Vector4   *message,
                      ProtobufCBuffer     *buffer);
DmMath__Vector4 *
       dm_math__vector4__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_math__vector4__free_unpacked
                     (DmMath__Vector4 *message,
                      ProtobufCAllocator *allocator);
/* DmMath__Quat methods */
void   dm_math__quat__init
                     (DmMath__Quat         *message);
size_t dm_math__quat__get_packed_size
                     (const DmMath__Quat   *message);
size_t dm_math__quat__pack
                     (const DmMath__Quat   *message,
                      uint8_t             *out);
size_t dm_math__quat__pack_to_buffer
                     (const DmMath__Quat   *message,
                      ProtobufCBuffer     *buffer);
DmMath__Quat *
       dm_math__quat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_math__quat__free_unpacked
                     (DmMath__Quat *message,
                      ProtobufCAllocator *allocator);
/* DmMath__Transform methods */
void   dm_math__transform__init
                     (DmMath__Transform         *message);
size_t dm_math__transform__get_packed_size
                     (const DmMath__Transform   *message);
size_t dm_math__transform__pack
                     (const DmMath__Transform   *message,
                      uint8_t             *out);
size_t dm_math__transform__pack_to_buffer
                     (const DmMath__Transform   *message,
                      ProtobufCBuffer     *buffer);
DmMath__Transform *
       dm_math__transform__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_math__transform__free_unpacked
                     (DmMath__Transform *message,
                      ProtobufCAllocator *allocator);
/* DmMath__Matrix4 methods */
void   dm_math__matrix4__init
                     (DmMath__Matrix4         *message);
size_t dm_math__matrix4__get_packed_size
                     (const DmMath__Matrix4   *message);
size_t dm_math__matrix4__pack
                     (const DmMath__Matrix4   *message,
                      uint8_t             *out);
size_t dm_math__matrix4__pack_to_buffer
                     (const DmMath__Matrix4   *message,
                      ProtobufCBuffer     *buffer);
DmMath__Matrix4 *
       dm_math__matrix4__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_math__matrix4__free_unpacked
                     (DmMath__Matrix4 *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DmMath__Point3_Closure)
                 (const DmMath__Point3 *message,
                  void *closure_data);
typedef void (*DmMath__Vector3_Closure)
                 (const DmMath__Vector3 *message,
                  void *closure_data);
typedef void (*DmMath__Vector4_Closure)
                 (const DmMath__Vector4 *message,
                  void *closure_data);
typedef void (*DmMath__Quat_Closure)
                 (const DmMath__Quat *message,
                  void *closure_data);
typedef void (*DmMath__Transform_Closure)
                 (const DmMath__Transform *message,
                  void *closure_data);
typedef void (*DmMath__Matrix4_Closure)
                 (const DmMath__Matrix4 *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor dm_math__point3__descriptor;
extern const ProtobufCMessageDescriptor dm_math__vector3__descriptor;
extern const ProtobufCMessageDescriptor dm_math__vector4__descriptor;
extern const ProtobufCMessageDescriptor dm_math__quat__descriptor;
extern const ProtobufCMessageDescriptor dm_math__transform__descriptor;
extern const ProtobufCMessageDescriptor dm_math__matrix4__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ddf_2fddf_5fmath_2eproto__INCLUDED */

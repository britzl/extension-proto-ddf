/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: gamesys/label_ddf.proto */

#ifndef PROTOBUF_C_gamesys_2flabel_5fddf_2eproto__INCLUDED
#define PROTOBUF_C_gamesys_2flabel_5fddf_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "ddf/ddf_extensions.pb-c.h"
#include "ddf/ddf_math.pb-c.h"

typedef struct DmGameSystemDDF__LabelDesc DmGameSystemDDF__LabelDesc;
typedef struct DmGameSystemDDF__SetText DmGameSystemDDF__SetText;


/* --- enums --- */

typedef enum _DmGameSystemDDF__LabelDesc__BlendMode {
  DM_GAME_SYSTEM_DDF__LABEL_DESC__BLEND_MODE__BLEND_MODE_ALPHA = 0,
  DM_GAME_SYSTEM_DDF__LABEL_DESC__BLEND_MODE__BLEND_MODE_ADD = 1,
  DM_GAME_SYSTEM_DDF__LABEL_DESC__BLEND_MODE__BLEND_MODE_MULT = 3,
  DM_GAME_SYSTEM_DDF__LABEL_DESC__BLEND_MODE__BLEND_MODE_SCREEN = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DM_GAME_SYSTEM_DDF__LABEL_DESC__BLEND_MODE)
} DmGameSystemDDF__LabelDesc__BlendMode;
typedef enum _DmGameSystemDDF__LabelDesc__Pivot {
  DM_GAME_SYSTEM_DDF__LABEL_DESC__PIVOT__PIVOT_CENTER = 0,
  DM_GAME_SYSTEM_DDF__LABEL_DESC__PIVOT__PIVOT_N = 1,
  DM_GAME_SYSTEM_DDF__LABEL_DESC__PIVOT__PIVOT_NE = 2,
  DM_GAME_SYSTEM_DDF__LABEL_DESC__PIVOT__PIVOT_E = 3,
  DM_GAME_SYSTEM_DDF__LABEL_DESC__PIVOT__PIVOT_SE = 4,
  DM_GAME_SYSTEM_DDF__LABEL_DESC__PIVOT__PIVOT_S = 5,
  DM_GAME_SYSTEM_DDF__LABEL_DESC__PIVOT__PIVOT_SW = 6,
  DM_GAME_SYSTEM_DDF__LABEL_DESC__PIVOT__PIVOT_W = 7,
  DM_GAME_SYSTEM_DDF__LABEL_DESC__PIVOT__PIVOT_NW = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DM_GAME_SYSTEM_DDF__LABEL_DESC__PIVOT)
} DmGameSystemDDF__LabelDesc__Pivot;

/* --- messages --- */

struct  DmGameSystemDDF__LabelDesc
{
  ProtobufCMessage base;
  DmMath__Vector4 *size;
  DmMath__Vector4 *scale;
  DmMath__Vector4 *color;
  DmMath__Vector4 *outline;
  DmMath__Vector4 *shadow;
  float leading;
  float tracking;
  DmGameSystemDDF__LabelDesc__Pivot pivot;
  DmGameSystemDDF__LabelDesc__BlendMode blend_mode;
  protobuf_c_boolean line_break;
  char *text;
  char *font;
  char *material;
};
#define DM_GAME_SYSTEM_DDF__LABEL_DESC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_system_ddf__label_desc__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, 0, 0, DM_GAME_SYSTEM_DDF__LABEL_DESC__PIVOT__PIVOT_CENTER, DM_GAME_SYSTEM_DDF__LABEL_DESC__BLEND_MODE__BLEND_MODE_ALPHA, 0, NULL, NULL, NULL }


struct  DmGameSystemDDF__SetText
{
  ProtobufCMessage base;
  char *text;
};
#define DM_GAME_SYSTEM_DDF__SET_TEXT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_system_ddf__set_text__descriptor) \
    , NULL }


/* DmGameSystemDDF__LabelDesc methods */
void   dm_game_system_ddf__label_desc__init
                     (DmGameSystemDDF__LabelDesc         *message);
size_t dm_game_system_ddf__label_desc__get_packed_size
                     (const DmGameSystemDDF__LabelDesc   *message);
size_t dm_game_system_ddf__label_desc__pack
                     (const DmGameSystemDDF__LabelDesc   *message,
                      uint8_t             *out);
size_t dm_game_system_ddf__label_desc__pack_to_buffer
                     (const DmGameSystemDDF__LabelDesc   *message,
                      ProtobufCBuffer     *buffer);
DmGameSystemDDF__LabelDesc *
       dm_game_system_ddf__label_desc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_system_ddf__label_desc__free_unpacked
                     (DmGameSystemDDF__LabelDesc *message,
                      ProtobufCAllocator *allocator);
/* DmGameSystemDDF__SetText methods */
void   dm_game_system_ddf__set_text__init
                     (DmGameSystemDDF__SetText         *message);
size_t dm_game_system_ddf__set_text__get_packed_size
                     (const DmGameSystemDDF__SetText   *message);
size_t dm_game_system_ddf__set_text__pack
                     (const DmGameSystemDDF__SetText   *message,
                      uint8_t             *out);
size_t dm_game_system_ddf__set_text__pack_to_buffer
                     (const DmGameSystemDDF__SetText   *message,
                      ProtobufCBuffer     *buffer);
DmGameSystemDDF__SetText *
       dm_game_system_ddf__set_text__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_system_ddf__set_text__free_unpacked
                     (DmGameSystemDDF__SetText *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DmGameSystemDDF__LabelDesc_Closure)
                 (const DmGameSystemDDF__LabelDesc *message,
                  void *closure_data);
typedef void (*DmGameSystemDDF__SetText_Closure)
                 (const DmGameSystemDDF__SetText *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor dm_game_system_ddf__label_desc__descriptor;
extern const ProtobufCEnumDescriptor    dm_game_system_ddf__label_desc__blend_mode__descriptor;
extern const ProtobufCEnumDescriptor    dm_game_system_ddf__label_desc__pivot__descriptor;
extern const ProtobufCMessageDescriptor dm_game_system_ddf__set_text__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_gamesys_2flabel_5fddf_2eproto__INCLUDED */

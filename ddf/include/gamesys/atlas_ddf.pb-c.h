/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: gamesys/atlas_ddf.proto */

#ifndef PROTOBUF_C_gamesys_2fatlas_5fddf_2eproto__INCLUDED
#define PROTOBUF_C_gamesys_2fatlas_5fddf_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "ddf/ddf_extensions.pb-c.h"
#include "ddf/ddf_math.pb-c.h"
#include "gamesys/tile_ddf.pb-c.h"

typedef struct DmGameSystemDDF__AtlasImage DmGameSystemDDF__AtlasImage;
typedef struct DmGameSystemDDF__AtlasAnimation DmGameSystemDDF__AtlasAnimation;
typedef struct DmGameSystemDDF__Atlas DmGameSystemDDF__Atlas;


/* --- enums --- */


/* --- messages --- */

struct  DmGameSystemDDF__AtlasImage
{
  ProtobufCMessage base;
  char *image;
  protobuf_c_boolean has_sprite_trim_mode;
  DmGameSystemDDF__SpriteTrimmingMode sprite_trim_mode;
};
#define DM_GAME_SYSTEM_DDF__ATLAS_IMAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_system_ddf__atlas_image__descriptor) \
    , NULL, 0, DM_GAME_SYSTEM_DDF__SPRITE_TRIMMING_MODE__SPRITE_TRIM_MODE_OFF }


struct  DmGameSystemDDF__AtlasAnimation
{
  ProtobufCMessage base;
  char *id;
  size_t n_images;
  DmGameSystemDDF__AtlasImage **images;
  protobuf_c_boolean has_playback;
  DmGameSystemDDF__Playback playback;
  protobuf_c_boolean has_fps;
  uint32_t fps;
  protobuf_c_boolean has_flip_horizontal;
  uint32_t flip_horizontal;
  protobuf_c_boolean has_flip_vertical;
  uint32_t flip_vertical;
};
#define DM_GAME_SYSTEM_DDF__ATLAS_ANIMATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_system_ddf__atlas_animation__descriptor) \
    , NULL, 0,NULL, 0, DM_GAME_SYSTEM_DDF__PLAYBACK__PLAYBACK_ONCE_FORWARD, 0, 30u, 0, 0u, 0, 0u }


struct  DmGameSystemDDF__Atlas
{
  ProtobufCMessage base;
  size_t n_images;
  DmGameSystemDDF__AtlasImage **images;
  size_t n_animations;
  DmGameSystemDDF__AtlasAnimation **animations;
  protobuf_c_boolean has_margin;
  uint32_t margin;
  protobuf_c_boolean has_extrude_borders;
  uint32_t extrude_borders;
  protobuf_c_boolean has_inner_padding;
  uint32_t inner_padding;
};
#define DM_GAME_SYSTEM_DDF__ATLAS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_game_system_ddf__atlas__descriptor) \
    , 0,NULL, 0,NULL, 0, 0u, 0, 0u, 0, 0u }


/* DmGameSystemDDF__AtlasImage methods */
void   dm_game_system_ddf__atlas_image__init
                     (DmGameSystemDDF__AtlasImage         *message);
size_t dm_game_system_ddf__atlas_image__get_packed_size
                     (const DmGameSystemDDF__AtlasImage   *message);
size_t dm_game_system_ddf__atlas_image__pack
                     (const DmGameSystemDDF__AtlasImage   *message,
                      uint8_t             *out);
size_t dm_game_system_ddf__atlas_image__pack_to_buffer
                     (const DmGameSystemDDF__AtlasImage   *message,
                      ProtobufCBuffer     *buffer);
DmGameSystemDDF__AtlasImage *
       dm_game_system_ddf__atlas_image__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_system_ddf__atlas_image__free_unpacked
                     (DmGameSystemDDF__AtlasImage *message,
                      ProtobufCAllocator *allocator);
/* DmGameSystemDDF__AtlasAnimation methods */
void   dm_game_system_ddf__atlas_animation__init
                     (DmGameSystemDDF__AtlasAnimation         *message);
size_t dm_game_system_ddf__atlas_animation__get_packed_size
                     (const DmGameSystemDDF__AtlasAnimation   *message);
size_t dm_game_system_ddf__atlas_animation__pack
                     (const DmGameSystemDDF__AtlasAnimation   *message,
                      uint8_t             *out);
size_t dm_game_system_ddf__atlas_animation__pack_to_buffer
                     (const DmGameSystemDDF__AtlasAnimation   *message,
                      ProtobufCBuffer     *buffer);
DmGameSystemDDF__AtlasAnimation *
       dm_game_system_ddf__atlas_animation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_system_ddf__atlas_animation__free_unpacked
                     (DmGameSystemDDF__AtlasAnimation *message,
                      ProtobufCAllocator *allocator);
/* DmGameSystemDDF__Atlas methods */
void   dm_game_system_ddf__atlas__init
                     (DmGameSystemDDF__Atlas         *message);
size_t dm_game_system_ddf__atlas__get_packed_size
                     (const DmGameSystemDDF__Atlas   *message);
size_t dm_game_system_ddf__atlas__pack
                     (const DmGameSystemDDF__Atlas   *message,
                      uint8_t             *out);
size_t dm_game_system_ddf__atlas__pack_to_buffer
                     (const DmGameSystemDDF__Atlas   *message,
                      ProtobufCBuffer     *buffer);
DmGameSystemDDF__Atlas *
       dm_game_system_ddf__atlas__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_game_system_ddf__atlas__free_unpacked
                     (DmGameSystemDDF__Atlas *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DmGameSystemDDF__AtlasImage_Closure)
                 (const DmGameSystemDDF__AtlasImage *message,
                  void *closure_data);
typedef void (*DmGameSystemDDF__AtlasAnimation_Closure)
                 (const DmGameSystemDDF__AtlasAnimation *message,
                  void *closure_data);
typedef void (*DmGameSystemDDF__Atlas_Closure)
                 (const DmGameSystemDDF__Atlas *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor dm_game_system_ddf__atlas_image__descriptor;
extern const ProtobufCMessageDescriptor dm_game_system_ddf__atlas_animation__descriptor;
extern const ProtobufCMessageDescriptor dm_game_system_ddf__atlas__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_gamesys_2fatlas_5fddf_2eproto__INCLUDED */

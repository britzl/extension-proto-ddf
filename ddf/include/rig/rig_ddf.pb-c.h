/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: rig/rig_ddf.proto */

#ifndef PROTOBUF_C_rig_2frig_5fddf_2eproto__INCLUDED
#define PROTOBUF_C_rig_2frig_5fddf_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "ddf/ddf_extensions.pb-c.h"
#include "ddf/ddf_math.pb-c.h"

typedef struct DmRigDDF__Bone DmRigDDF__Bone;
typedef struct DmRigDDF__IK DmRigDDF__IK;
typedef struct DmRigDDF__Skeleton DmRigDDF__Skeleton;
typedef struct DmRigDDF__AnimationTrack DmRigDDF__AnimationTrack;
typedef struct DmRigDDF__EventKey DmRigDDF__EventKey;
typedef struct DmRigDDF__EventTrack DmRigDDF__EventTrack;
typedef struct DmRigDDF__RigAnimation DmRigDDF__RigAnimation;
typedef struct DmRigDDF__AnimationSet DmRigDDF__AnimationSet;
typedef struct DmRigDDF__AnimationInstanceDesc DmRigDDF__AnimationInstanceDesc;
typedef struct DmRigDDF__AnimationSetDesc DmRigDDF__AnimationSetDesc;
typedef struct DmRigDDF__Mesh DmRigDDF__Mesh;
typedef struct DmRigDDF__Model DmRigDDF__Model;
typedef struct DmRigDDF__MeshSet DmRigDDF__MeshSet;
typedef struct DmRigDDF__RigScene DmRigDDF__RigScene;


/* --- enums --- */

typedef enum _DmRigDDF__IndexBufferFormat {
  DM_RIG_DDF__INDEX_BUFFER_FORMAT__INDEXBUFFER_FORMAT_16 = 0,
  DM_RIG_DDF__INDEX_BUFFER_FORMAT__INDEXBUFFER_FORMAT_32 = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DM_RIG_DDF__INDEX_BUFFER_FORMAT)
} DmRigDDF__IndexBufferFormat;

/* --- messages --- */

struct  DmRigDDF__Bone
{
  ProtobufCMessage base;
  /*
   * 0xFFFFFFFF means no parent
   */
  uint32_t parent;
  uint64_t id;
  /*
   * For easier debugging at runtime
   */
  char *name;
  /*
   * Deprecated/unused (only in unit test=)
   */
  DmMath__Transform *local;
  /*
   * Deprecated/unused
   */
  DmMath__Transform *world;
  DmMath__Transform *inverse_bind_pose;
  protobuf_c_boolean has_length;
  float length;
};
#define DM_RIG_DDF__BONE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_rig_ddf__bone__descriptor) \
    , 0, 0, NULL, NULL, NULL, NULL, 0, 0 }


struct  DmRigDDF__IK
{
  ProtobufCMessage base;
  uint64_t id;
  uint32_t parent;
  uint32_t child;
  uint32_t target;
  protobuf_c_boolean has_positive;
  protobuf_c_boolean positive;
  protobuf_c_boolean has_mix;
  float mix;
};
#define DM_RIG_DDF__IK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_rig_ddf__ik__descriptor) \
    , 0, 0, 0, 0, 0, 1, 0, 1 }


struct  DmRigDDF__Skeleton
{
  ProtobufCMessage base;
  size_t n_bones;
  DmRigDDF__Bone **bones;
  size_t n_iks;
  DmRigDDF__IK **iks;
};
#define DM_RIG_DDF__SKELETON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_rig_ddf__skeleton__descriptor) \
    , 0,NULL, 0,NULL }


struct  DmRigDDF__AnimationTrack
{
  ProtobufCMessage base;
  uint32_t bone_index;
  /*
   * x0, y0, z0, ...
   */
  size_t n_positions;
  float *positions;
  /*
   * x0, x0, z0, w0, …
   */
  size_t n_rotations;
  float *rotations;
  /*
   * x0, y0, z0, …
   */
  size_t n_scale;
  float *scale;
};
#define DM_RIG_DDF__ANIMATION_TRACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_rig_ddf__animation_track__descriptor) \
    , 0, 0,NULL, 0,NULL, 0,NULL }


struct  DmRigDDF__EventKey
{
  ProtobufCMessage base;
  float t;
  protobuf_c_boolean has_integer;
  int32_t integer;
  protobuf_c_boolean has_float_;
  float float_;
  protobuf_c_boolean has_string;
  uint64_t string;
};
#define DM_RIG_DDF__EVENT_KEY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_rig_ddf__event_key__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0ull }


struct  DmRigDDF__EventTrack
{
  ProtobufCMessage base;
  uint64_t event_id;
  size_t n_keys;
  DmRigDDF__EventKey **keys;
};
#define DM_RIG_DDF__EVENT_TRACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_rig_ddf__event_track__descriptor) \
    , 0, 0,NULL }


struct  DmRigDDF__RigAnimation
{
  ProtobufCMessage base;
  uint64_t id;
  float duration;
  float sample_rate;
  size_t n_tracks;
  DmRigDDF__AnimationTrack **tracks;
  size_t n_event_tracks;
  DmRigDDF__EventTrack **event_tracks;
};
#define DM_RIG_DDF__RIG_ANIMATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_rig_ddf__rig_animation__descriptor) \
    , 0, 0, 0, 0,NULL, 0,NULL }


struct  DmRigDDF__AnimationSet
{
  ProtobufCMessage base;
  size_t n_animations;
  DmRigDDF__RigAnimation **animations;
  size_t n_bone_list;
  uint64_t *bone_list;
};
#define DM_RIG_DDF__ANIMATION_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_rig_ddf__animation_set__descriptor) \
    , 0,NULL, 0,NULL }


struct  DmRigDDF__AnimationInstanceDesc
{
  ProtobufCMessage base;
  char *animation;
};
#define DM_RIG_DDF__ANIMATION_INSTANCE_DESC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_rig_ddf__animation_instance_desc__descriptor) \
    , NULL }


struct  DmRigDDF__AnimationSetDesc
{
  ProtobufCMessage base;
  size_t n_animations;
  DmRigDDF__AnimationInstanceDesc **animations;
  char *skeleton;
};
#define DM_RIG_DDF__ANIMATION_SET_DESC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_rig_ddf__animation_set_desc__descriptor) \
    , 0,NULL, NULL }


struct  DmRigDDF__Mesh
{
  ProtobufCMessage base;
  size_t n_positions;
  float *positions;
  size_t n_normals;
  float *normals;
  size_t n_tangents;
  float *tangents;
  size_t n_colors;
  float *colors;
  size_t n_texcoord0;
  float *texcoord0;
  /*
   * max 3
   */
  protobuf_c_boolean has_num_texcoord0_components;
  uint32_t num_texcoord0_components;
  size_t n_texcoord1;
  float *texcoord1;
  /*
   * max 3
   */
  protobuf_c_boolean has_num_texcoord1_components;
  uint32_t num_texcoord1_components;
  /*
   * indices for interleaved vertex buffer
   */
  protobuf_c_boolean has_indices;
  ProtobufCBinaryData indices;
  /*
   * format of values in indices
   */
  protobuf_c_boolean has_indices_format;
  DmRigDDF__IndexBufferFormat indices_format;
  /*
   * w00, w01, w02, w03, w10, … (only specified for skinned meshes)
   */
  size_t n_weights;
  float *weights;
  /*
   * i00, i01, i02, i03, i10, … (only specified for skinned meshes)
   */
  size_t n_bone_indices;
  uint32_t *bone_indices;
  /*
   * index into the mesh set material list
   */
  protobuf_c_boolean has_material_index;
  uint32_t material_index;
};
#define DM_RIG_DDF__MESH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_rig_ddf__mesh__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0, 0, 0,NULL, 0, 0, 0, {0,NULL}, 0, DM_RIG_DDF__INDEX_BUFFER_FORMAT__INDEXBUFFER_FORMAT_16, 0,NULL, 0,NULL, 0, 0 }


struct  DmRigDDF__Model
{
  ProtobufCMessage base;
  DmMath__Transform *local;
  /*
   * E.g. "torso", "head". Or simply "character"
   */
  uint64_t id;
  size_t n_meshes;
  DmRigDDF__Mesh **meshes;
};
#define DM_RIG_DDF__MODEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_rig_ddf__model__descriptor) \
    , NULL, 0, 0,NULL }


struct  DmRigDDF__MeshSet
{
  ProtobufCMessage base;
  /*
   * There may be more than one object in a scene
   */
  size_t n_models;
  DmRigDDF__Model **models;
  size_t n_materials;
  char **materials;
  /*
   * List of bone names that represent the order of the bone influences.
   * Not used for Spine rigs since they don't have support for external skeletons.
   */
  size_t n_bone_list;
  uint64_t *bone_list;
  /*
   * Max number of bones used in any of the meshes (in the bone_indices list)
   */
  protobuf_c_boolean has_max_bone_count;
  uint32_t max_bone_count;
};
#define DM_RIG_DDF__MESH_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_rig_ddf__mesh_set__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0, 0 }


/*
 * Public api
 */
struct  DmRigDDF__RigScene
{
  ProtobufCMessage base;
  char *skeleton;
  char *animation_set;
  char *mesh_set;
  char *texture_set;
};
#define DM_RIG_DDF__RIG_SCENE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_rig_ddf__rig_scene__descriptor) \
    , NULL, NULL, NULL, NULL }


/* DmRigDDF__Bone methods */
void   dm_rig_ddf__bone__init
                     (DmRigDDF__Bone         *message);
size_t dm_rig_ddf__bone__get_packed_size
                     (const DmRigDDF__Bone   *message);
size_t dm_rig_ddf__bone__pack
                     (const DmRigDDF__Bone   *message,
                      uint8_t             *out);
size_t dm_rig_ddf__bone__pack_to_buffer
                     (const DmRigDDF__Bone   *message,
                      ProtobufCBuffer     *buffer);
DmRigDDF__Bone *
       dm_rig_ddf__bone__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_rig_ddf__bone__free_unpacked
                     (DmRigDDF__Bone *message,
                      ProtobufCAllocator *allocator);
/* DmRigDDF__IK methods */
void   dm_rig_ddf__ik__init
                     (DmRigDDF__IK         *message);
size_t dm_rig_ddf__ik__get_packed_size
                     (const DmRigDDF__IK   *message);
size_t dm_rig_ddf__ik__pack
                     (const DmRigDDF__IK   *message,
                      uint8_t             *out);
size_t dm_rig_ddf__ik__pack_to_buffer
                     (const DmRigDDF__IK   *message,
                      ProtobufCBuffer     *buffer);
DmRigDDF__IK *
       dm_rig_ddf__ik__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_rig_ddf__ik__free_unpacked
                     (DmRigDDF__IK *message,
                      ProtobufCAllocator *allocator);
/* DmRigDDF__Skeleton methods */
void   dm_rig_ddf__skeleton__init
                     (DmRigDDF__Skeleton         *message);
size_t dm_rig_ddf__skeleton__get_packed_size
                     (const DmRigDDF__Skeleton   *message);
size_t dm_rig_ddf__skeleton__pack
                     (const DmRigDDF__Skeleton   *message,
                      uint8_t             *out);
size_t dm_rig_ddf__skeleton__pack_to_buffer
                     (const DmRigDDF__Skeleton   *message,
                      ProtobufCBuffer     *buffer);
DmRigDDF__Skeleton *
       dm_rig_ddf__skeleton__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_rig_ddf__skeleton__free_unpacked
                     (DmRigDDF__Skeleton *message,
                      ProtobufCAllocator *allocator);
/* DmRigDDF__AnimationTrack methods */
void   dm_rig_ddf__animation_track__init
                     (DmRigDDF__AnimationTrack         *message);
size_t dm_rig_ddf__animation_track__get_packed_size
                     (const DmRigDDF__AnimationTrack   *message);
size_t dm_rig_ddf__animation_track__pack
                     (const DmRigDDF__AnimationTrack   *message,
                      uint8_t             *out);
size_t dm_rig_ddf__animation_track__pack_to_buffer
                     (const DmRigDDF__AnimationTrack   *message,
                      ProtobufCBuffer     *buffer);
DmRigDDF__AnimationTrack *
       dm_rig_ddf__animation_track__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_rig_ddf__animation_track__free_unpacked
                     (DmRigDDF__AnimationTrack *message,
                      ProtobufCAllocator *allocator);
/* DmRigDDF__EventKey methods */
void   dm_rig_ddf__event_key__init
                     (DmRigDDF__EventKey         *message);
size_t dm_rig_ddf__event_key__get_packed_size
                     (const DmRigDDF__EventKey   *message);
size_t dm_rig_ddf__event_key__pack
                     (const DmRigDDF__EventKey   *message,
                      uint8_t             *out);
size_t dm_rig_ddf__event_key__pack_to_buffer
                     (const DmRigDDF__EventKey   *message,
                      ProtobufCBuffer     *buffer);
DmRigDDF__EventKey *
       dm_rig_ddf__event_key__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_rig_ddf__event_key__free_unpacked
                     (DmRigDDF__EventKey *message,
                      ProtobufCAllocator *allocator);
/* DmRigDDF__EventTrack methods */
void   dm_rig_ddf__event_track__init
                     (DmRigDDF__EventTrack         *message);
size_t dm_rig_ddf__event_track__get_packed_size
                     (const DmRigDDF__EventTrack   *message);
size_t dm_rig_ddf__event_track__pack
                     (const DmRigDDF__EventTrack   *message,
                      uint8_t             *out);
size_t dm_rig_ddf__event_track__pack_to_buffer
                     (const DmRigDDF__EventTrack   *message,
                      ProtobufCBuffer     *buffer);
DmRigDDF__EventTrack *
       dm_rig_ddf__event_track__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_rig_ddf__event_track__free_unpacked
                     (DmRigDDF__EventTrack *message,
                      ProtobufCAllocator *allocator);
/* DmRigDDF__RigAnimation methods */
void   dm_rig_ddf__rig_animation__init
                     (DmRigDDF__RigAnimation         *message);
size_t dm_rig_ddf__rig_animation__get_packed_size
                     (const DmRigDDF__RigAnimation   *message);
size_t dm_rig_ddf__rig_animation__pack
                     (const DmRigDDF__RigAnimation   *message,
                      uint8_t             *out);
size_t dm_rig_ddf__rig_animation__pack_to_buffer
                     (const DmRigDDF__RigAnimation   *message,
                      ProtobufCBuffer     *buffer);
DmRigDDF__RigAnimation *
       dm_rig_ddf__rig_animation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_rig_ddf__rig_animation__free_unpacked
                     (DmRigDDF__RigAnimation *message,
                      ProtobufCAllocator *allocator);
/* DmRigDDF__AnimationSet methods */
void   dm_rig_ddf__animation_set__init
                     (DmRigDDF__AnimationSet         *message);
size_t dm_rig_ddf__animation_set__get_packed_size
                     (const DmRigDDF__AnimationSet   *message);
size_t dm_rig_ddf__animation_set__pack
                     (const DmRigDDF__AnimationSet   *message,
                      uint8_t             *out);
size_t dm_rig_ddf__animation_set__pack_to_buffer
                     (const DmRigDDF__AnimationSet   *message,
                      ProtobufCBuffer     *buffer);
DmRigDDF__AnimationSet *
       dm_rig_ddf__animation_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_rig_ddf__animation_set__free_unpacked
                     (DmRigDDF__AnimationSet *message,
                      ProtobufCAllocator *allocator);
/* DmRigDDF__AnimationInstanceDesc methods */
void   dm_rig_ddf__animation_instance_desc__init
                     (DmRigDDF__AnimationInstanceDesc         *message);
size_t dm_rig_ddf__animation_instance_desc__get_packed_size
                     (const DmRigDDF__AnimationInstanceDesc   *message);
size_t dm_rig_ddf__animation_instance_desc__pack
                     (const DmRigDDF__AnimationInstanceDesc   *message,
                      uint8_t             *out);
size_t dm_rig_ddf__animation_instance_desc__pack_to_buffer
                     (const DmRigDDF__AnimationInstanceDesc   *message,
                      ProtobufCBuffer     *buffer);
DmRigDDF__AnimationInstanceDesc *
       dm_rig_ddf__animation_instance_desc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_rig_ddf__animation_instance_desc__free_unpacked
                     (DmRigDDF__AnimationInstanceDesc *message,
                      ProtobufCAllocator *allocator);
/* DmRigDDF__AnimationSetDesc methods */
void   dm_rig_ddf__animation_set_desc__init
                     (DmRigDDF__AnimationSetDesc         *message);
size_t dm_rig_ddf__animation_set_desc__get_packed_size
                     (const DmRigDDF__AnimationSetDesc   *message);
size_t dm_rig_ddf__animation_set_desc__pack
                     (const DmRigDDF__AnimationSetDesc   *message,
                      uint8_t             *out);
size_t dm_rig_ddf__animation_set_desc__pack_to_buffer
                     (const DmRigDDF__AnimationSetDesc   *message,
                      ProtobufCBuffer     *buffer);
DmRigDDF__AnimationSetDesc *
       dm_rig_ddf__animation_set_desc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_rig_ddf__animation_set_desc__free_unpacked
                     (DmRigDDF__AnimationSetDesc *message,
                      ProtobufCAllocator *allocator);
/* DmRigDDF__Mesh methods */
void   dm_rig_ddf__mesh__init
                     (DmRigDDF__Mesh         *message);
size_t dm_rig_ddf__mesh__get_packed_size
                     (const DmRigDDF__Mesh   *message);
size_t dm_rig_ddf__mesh__pack
                     (const DmRigDDF__Mesh   *message,
                      uint8_t             *out);
size_t dm_rig_ddf__mesh__pack_to_buffer
                     (const DmRigDDF__Mesh   *message,
                      ProtobufCBuffer     *buffer);
DmRigDDF__Mesh *
       dm_rig_ddf__mesh__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_rig_ddf__mesh__free_unpacked
                     (DmRigDDF__Mesh *message,
                      ProtobufCAllocator *allocator);
/* DmRigDDF__Model methods */
void   dm_rig_ddf__model__init
                     (DmRigDDF__Model         *message);
size_t dm_rig_ddf__model__get_packed_size
                     (const DmRigDDF__Model   *message);
size_t dm_rig_ddf__model__pack
                     (const DmRigDDF__Model   *message,
                      uint8_t             *out);
size_t dm_rig_ddf__model__pack_to_buffer
                     (const DmRigDDF__Model   *message,
                      ProtobufCBuffer     *buffer);
DmRigDDF__Model *
       dm_rig_ddf__model__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_rig_ddf__model__free_unpacked
                     (DmRigDDF__Model *message,
                      ProtobufCAllocator *allocator);
/* DmRigDDF__MeshSet methods */
void   dm_rig_ddf__mesh_set__init
                     (DmRigDDF__MeshSet         *message);
size_t dm_rig_ddf__mesh_set__get_packed_size
                     (const DmRigDDF__MeshSet   *message);
size_t dm_rig_ddf__mesh_set__pack
                     (const DmRigDDF__MeshSet   *message,
                      uint8_t             *out);
size_t dm_rig_ddf__mesh_set__pack_to_buffer
                     (const DmRigDDF__MeshSet   *message,
                      ProtobufCBuffer     *buffer);
DmRigDDF__MeshSet *
       dm_rig_ddf__mesh_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_rig_ddf__mesh_set__free_unpacked
                     (DmRigDDF__MeshSet *message,
                      ProtobufCAllocator *allocator);
/* DmRigDDF__RigScene methods */
void   dm_rig_ddf__rig_scene__init
                     (DmRigDDF__RigScene         *message);
size_t dm_rig_ddf__rig_scene__get_packed_size
                     (const DmRigDDF__RigScene   *message);
size_t dm_rig_ddf__rig_scene__pack
                     (const DmRigDDF__RigScene   *message,
                      uint8_t             *out);
size_t dm_rig_ddf__rig_scene__pack_to_buffer
                     (const DmRigDDF__RigScene   *message,
                      ProtobufCBuffer     *buffer);
DmRigDDF__RigScene *
       dm_rig_ddf__rig_scene__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_rig_ddf__rig_scene__free_unpacked
                     (DmRigDDF__RigScene *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DmRigDDF__Bone_Closure)
                 (const DmRigDDF__Bone *message,
                  void *closure_data);
typedef void (*DmRigDDF__IK_Closure)
                 (const DmRigDDF__IK *message,
                  void *closure_data);
typedef void (*DmRigDDF__Skeleton_Closure)
                 (const DmRigDDF__Skeleton *message,
                  void *closure_data);
typedef void (*DmRigDDF__AnimationTrack_Closure)
                 (const DmRigDDF__AnimationTrack *message,
                  void *closure_data);
typedef void (*DmRigDDF__EventKey_Closure)
                 (const DmRigDDF__EventKey *message,
                  void *closure_data);
typedef void (*DmRigDDF__EventTrack_Closure)
                 (const DmRigDDF__EventTrack *message,
                  void *closure_data);
typedef void (*DmRigDDF__RigAnimation_Closure)
                 (const DmRigDDF__RigAnimation *message,
                  void *closure_data);
typedef void (*DmRigDDF__AnimationSet_Closure)
                 (const DmRigDDF__AnimationSet *message,
                  void *closure_data);
typedef void (*DmRigDDF__AnimationInstanceDesc_Closure)
                 (const DmRigDDF__AnimationInstanceDesc *message,
                  void *closure_data);
typedef void (*DmRigDDF__AnimationSetDesc_Closure)
                 (const DmRigDDF__AnimationSetDesc *message,
                  void *closure_data);
typedef void (*DmRigDDF__Mesh_Closure)
                 (const DmRigDDF__Mesh *message,
                  void *closure_data);
typedef void (*DmRigDDF__Model_Closure)
                 (const DmRigDDF__Model *message,
                  void *closure_data);
typedef void (*DmRigDDF__MeshSet_Closure)
                 (const DmRigDDF__MeshSet *message,
                  void *closure_data);
typedef void (*DmRigDDF__RigScene_Closure)
                 (const DmRigDDF__RigScene *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    dm_rig_ddf__index_buffer_format__descriptor;
extern const ProtobufCMessageDescriptor dm_rig_ddf__bone__descriptor;
extern const ProtobufCMessageDescriptor dm_rig_ddf__ik__descriptor;
extern const ProtobufCMessageDescriptor dm_rig_ddf__skeleton__descriptor;
extern const ProtobufCMessageDescriptor dm_rig_ddf__animation_track__descriptor;
extern const ProtobufCMessageDescriptor dm_rig_ddf__event_key__descriptor;
extern const ProtobufCMessageDescriptor dm_rig_ddf__event_track__descriptor;
extern const ProtobufCMessageDescriptor dm_rig_ddf__rig_animation__descriptor;
extern const ProtobufCMessageDescriptor dm_rig_ddf__animation_set__descriptor;
extern const ProtobufCMessageDescriptor dm_rig_ddf__animation_instance_desc__descriptor;
extern const ProtobufCMessageDescriptor dm_rig_ddf__animation_set_desc__descriptor;
extern const ProtobufCMessageDescriptor dm_rig_ddf__mesh__descriptor;
extern const ProtobufCMessageDescriptor dm_rig_ddf__model__descriptor;
extern const ProtobufCMessageDescriptor dm_rig_ddf__mesh_set__descriptor;
extern const ProtobufCMessageDescriptor dm_rig_ddf__rig_scene__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_rig_2frig_5fddf_2eproto__INCLUDED */

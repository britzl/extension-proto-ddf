/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: particle/particle_ddf.proto */

#ifndef PROTOBUF_C_particle_2fparticle_5fddf_2eproto__INCLUDED
#define PROTOBUF_C_particle_2fparticle_5fddf_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "ddf/ddf_extensions.pb-c.h"
#include "ddf/ddf_math.pb-c.h"

typedef struct DmParticleDDF__SplinePoint DmParticleDDF__SplinePoint;
typedef struct DmParticleDDF__Modifier DmParticleDDF__Modifier;
typedef struct DmParticleDDF__Modifier__Property DmParticleDDF__Modifier__Property;
typedef struct DmParticleDDF__Emitter DmParticleDDF__Emitter;
typedef struct DmParticleDDF__Emitter__Property DmParticleDDF__Emitter__Property;
typedef struct DmParticleDDF__Emitter__ParticleProperty DmParticleDDF__Emitter__ParticleProperty;
typedef struct DmParticleDDF__ParticleFX DmParticleDDF__ParticleFX;


/* --- enums --- */

typedef enum _DmParticleDDF__EmitterType {
  DM_PARTICLE_DDF__EMITTER_TYPE__EMITTER_TYPE_CIRCLE = 0,
  DM_PARTICLE_DDF__EMITTER_TYPE__EMITTER_TYPE_2DCONE = 1,
  DM_PARTICLE_DDF__EMITTER_TYPE__EMITTER_TYPE_BOX = 2,
  DM_PARTICLE_DDF__EMITTER_TYPE__EMITTER_TYPE_SPHERE = 3,
  DM_PARTICLE_DDF__EMITTER_TYPE__EMITTER_TYPE_CONE = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DM_PARTICLE_DDF__EMITTER_TYPE)
} DmParticleDDF__EmitterType;
typedef enum _DmParticleDDF__PlayMode {
  DM_PARTICLE_DDF__PLAY_MODE__PLAY_MODE_ONCE = 0,
  DM_PARTICLE_DDF__PLAY_MODE__PLAY_MODE_LOOP = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DM_PARTICLE_DDF__PLAY_MODE)
} DmParticleDDF__PlayMode;
typedef enum _DmParticleDDF__EmissionSpace {
  DM_PARTICLE_DDF__EMISSION_SPACE__EMISSION_SPACE_WORLD = 0,
  DM_PARTICLE_DDF__EMISSION_SPACE__EMISSION_SPACE_EMITTER = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DM_PARTICLE_DDF__EMISSION_SPACE)
} DmParticleDDF__EmissionSpace;
typedef enum _DmParticleDDF__EmitterKey {
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_SPAWN_RATE = 0,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_SIZE_X = 1,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_SIZE_Y = 2,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_SIZE_Z = 3,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_PARTICLE_LIFE_TIME = 4,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_PARTICLE_SPEED = 5,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_PARTICLE_SIZE = 6,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_PARTICLE_RED = 7,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_PARTICLE_GREEN = 8,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_PARTICLE_BLUE = 9,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_PARTICLE_ALPHA = 10,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_PARTICLE_ROTATION = 11,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_PARTICLE_STRETCH_FACTOR_X = 12,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_PARTICLE_STRETCH_FACTOR_Y = 13,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_PARTICLE_ANGULAR_VELOCITY = 14,
  DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_COUNT = 15
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DM_PARTICLE_DDF__EMITTER_KEY)
} DmParticleDDF__EmitterKey;
typedef enum _DmParticleDDF__ParticleKey {
  DM_PARTICLE_DDF__PARTICLE_KEY__PARTICLE_KEY_SCALE = 0,
  DM_PARTICLE_DDF__PARTICLE_KEY__PARTICLE_KEY_RED = 1,
  DM_PARTICLE_DDF__PARTICLE_KEY__PARTICLE_KEY_GREEN = 2,
  DM_PARTICLE_DDF__PARTICLE_KEY__PARTICLE_KEY_BLUE = 3,
  DM_PARTICLE_DDF__PARTICLE_KEY__PARTICLE_KEY_ALPHA = 4,
  DM_PARTICLE_DDF__PARTICLE_KEY__PARTICLE_KEY_ROTATION = 5,
  DM_PARTICLE_DDF__PARTICLE_KEY__PARTICLE_KEY_STRETCH_FACTOR_X = 6,
  DM_PARTICLE_DDF__PARTICLE_KEY__PARTICLE_KEY_STRETCH_FACTOR_Y = 7,
  DM_PARTICLE_DDF__PARTICLE_KEY__PARTICLE_KEY_ANGULAR_VELOCITY = 8,
  DM_PARTICLE_DDF__PARTICLE_KEY__PARTICLE_KEY_COUNT = 9
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DM_PARTICLE_DDF__PARTICLE_KEY)
} DmParticleDDF__ParticleKey;
typedef enum _DmParticleDDF__ModifierType {
  DM_PARTICLE_DDF__MODIFIER_TYPE__MODIFIER_TYPE_ACCELERATION = 0,
  DM_PARTICLE_DDF__MODIFIER_TYPE__MODIFIER_TYPE_DRAG = 1,
  DM_PARTICLE_DDF__MODIFIER_TYPE__MODIFIER_TYPE_RADIAL = 2,
  DM_PARTICLE_DDF__MODIFIER_TYPE__MODIFIER_TYPE_VORTEX = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DM_PARTICLE_DDF__MODIFIER_TYPE)
} DmParticleDDF__ModifierType;
typedef enum _DmParticleDDF__ModifierKey {
  DM_PARTICLE_DDF__MODIFIER_KEY__MODIFIER_KEY_MAGNITUDE = 0,
  DM_PARTICLE_DDF__MODIFIER_KEY__MODIFIER_KEY_MAX_DISTANCE = 1,
  DM_PARTICLE_DDF__MODIFIER_KEY__MODIFIER_KEY_COUNT = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DM_PARTICLE_DDF__MODIFIER_KEY)
} DmParticleDDF__ModifierKey;
/*
 * NOTE: Enum values must correspond to the enum values in XXX.cpp
 */
typedef enum _DmParticleDDF__BlendMode {
  DM_PARTICLE_DDF__BLEND_MODE__BLEND_MODE_ALPHA = 0,
  DM_PARTICLE_DDF__BLEND_MODE__BLEND_MODE_ADD = 1,
  DM_PARTICLE_DDF__BLEND_MODE__BLEND_MODE_ADD_ALPHA = 2,
  DM_PARTICLE_DDF__BLEND_MODE__BLEND_MODE_MULT = 3,
  DM_PARTICLE_DDF__BLEND_MODE__BLEND_MODE_SCREEN = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DM_PARTICLE_DDF__BLEND_MODE)
} DmParticleDDF__BlendMode;
typedef enum _DmParticleDDF__SizeMode {
  DM_PARTICLE_DDF__SIZE_MODE__SIZE_MODE_MANUAL = 0,
  DM_PARTICLE_DDF__SIZE_MODE__SIZE_MODE_AUTO = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DM_PARTICLE_DDF__SIZE_MODE)
} DmParticleDDF__SizeMode;
typedef enum _DmParticleDDF__ParticleOrientation {
  DM_PARTICLE_DDF__PARTICLE_ORIENTATION__PARTICLE_ORIENTATION_DEFAULT = 0,
  DM_PARTICLE_DDF__PARTICLE_ORIENTATION__PARTICLE_ORIENTATION_INITIAL_DIRECTION = 1,
  DM_PARTICLE_DDF__PARTICLE_ORIENTATION__PARTICLE_ORIENTATION_MOVEMENT_DIRECTION = 2,
  DM_PARTICLE_DDF__PARTICLE_ORIENTATION__PARTICLE_ORIENTATION_ANGULAR_VELOCITY = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DM_PARTICLE_DDF__PARTICLE_ORIENTATION)
} DmParticleDDF__ParticleOrientation;

/* --- messages --- */

struct  DmParticleDDF__SplinePoint
{
  ProtobufCMessage base;
  float x;
  float y;
  float t_x;
  float t_y;
};
#define DM_PARTICLE_DDF__SPLINE_POINT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_particle_ddf__spline_point__descriptor) \
    , 0, 0, 0, 0 }


struct  DmParticleDDF__Modifier__Property
{
  ProtobufCMessage base;
  DmParticleDDF__ModifierKey key;
  size_t n_points;
  DmParticleDDF__SplinePoint **points;
  protobuf_c_boolean has_spread;
  float spread;
};
#define DM_PARTICLE_DDF__MODIFIER__PROPERTY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_particle_ddf__modifier__property__descriptor) \
    , DM_PARTICLE_DDF__MODIFIER_KEY__MODIFIER_KEY_MAGNITUDE, 0,NULL, 0, 0 }


struct  DmParticleDDF__Modifier
{
  ProtobufCMessage base;
  DmParticleDDF__ModifierType type;
  protobuf_c_boolean has_use_direction;
  uint32_t use_direction;
  DmMath__Point3 *position;
  DmMath__Quat *rotation;
  size_t n_properties;
  DmParticleDDF__Modifier__Property **properties;
};
#define DM_PARTICLE_DDF__MODIFIER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_particle_ddf__modifier__descriptor) \
    , DM_PARTICLE_DDF__MODIFIER_TYPE__MODIFIER_TYPE_ACCELERATION, 0, 0u, NULL, NULL, 0,NULL }


struct  DmParticleDDF__Emitter__Property
{
  ProtobufCMessage base;
  DmParticleDDF__EmitterKey key;
  size_t n_points;
  DmParticleDDF__SplinePoint **points;
  protobuf_c_boolean has_spread;
  float spread;
};
#define DM_PARTICLE_DDF__EMITTER__PROPERTY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_particle_ddf__emitter__property__descriptor) \
    , DM_PARTICLE_DDF__EMITTER_KEY__EMITTER_KEY_SPAWN_RATE, 0,NULL, 0, 0 }


struct  DmParticleDDF__Emitter__ParticleProperty
{
  ProtobufCMessage base;
  DmParticleDDF__ParticleKey key;
  size_t n_points;
  DmParticleDDF__SplinePoint **points;
};
#define DM_PARTICLE_DDF__EMITTER__PARTICLE_PROPERTY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_particle_ddf__emitter__particle_property__descriptor) \
    , DM_PARTICLE_DDF__PARTICLE_KEY__PARTICLE_KEY_SCALE, 0,NULL }


struct  DmParticleDDF__Emitter
{
  ProtobufCMessage base;
  char *id;
  DmParticleDDF__PlayMode mode;
  protobuf_c_boolean has_duration;
  float duration;
  DmParticleDDF__EmissionSpace space;
  DmMath__Point3 *position;
  DmMath__Quat *rotation;
  char *tile_source;
  char *animation;
  char *material;
  protobuf_c_boolean has_blend_mode;
  DmParticleDDF__BlendMode blend_mode;
  protobuf_c_boolean has_particle_orientation;
  DmParticleDDF__ParticleOrientation particle_orientation;
  protobuf_c_boolean has_inherit_velocity;
  float inherit_velocity;
  uint32_t max_particle_count;
  DmParticleDDF__EmitterType type;
  protobuf_c_boolean has_start_delay;
  float start_delay;
  size_t n_properties;
  DmParticleDDF__Emitter__Property **properties;
  size_t n_particle_properties;
  DmParticleDDF__Emitter__ParticleProperty **particle_properties;
  size_t n_modifiers;
  DmParticleDDF__Modifier **modifiers;
  protobuf_c_boolean has_size_mode;
  DmParticleDDF__SizeMode size_mode;
  protobuf_c_boolean has_start_delay_spread;
  float start_delay_spread;
  protobuf_c_boolean has_duration_spread;
  float duration_spread;
  protobuf_c_boolean has_stretch_with_velocity;
  protobuf_c_boolean stretch_with_velocity;
  protobuf_c_boolean has_start_offset;
  float start_offset;
  DmMath__Point3 *pivot;
};
extern char dm_particle_ddf__emitter__id__default_value[];
#define DM_PARTICLE_DDF__EMITTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_particle_ddf__emitter__descriptor) \
    , dm_particle_ddf__emitter__id__default_value, DM_PARTICLE_DDF__PLAY_MODE__PLAY_MODE_ONCE, 0, 0, DM_PARTICLE_DDF__EMISSION_SPACE__EMISSION_SPACE_WORLD, NULL, NULL, NULL, NULL, NULL, 0, DM_PARTICLE_DDF__BLEND_MODE__BLEND_MODE_ALPHA, 0, DM_PARTICLE_DDF__PARTICLE_ORIENTATION__PARTICLE_ORIENTATION_DEFAULT, 0, 0, 0, DM_PARTICLE_DDF__EMITTER_TYPE__EMITTER_TYPE_CIRCLE, 0, 0, 0,NULL, 0,NULL, 0,NULL, 0, DM_PARTICLE_DDF__SIZE_MODE__SIZE_MODE_MANUAL, 0, 0, 0, 0, 0, 0, 0, 0, NULL }


struct  DmParticleDDF__ParticleFX
{
  ProtobufCMessage base;
  size_t n_emitters;
  DmParticleDDF__Emitter **emitters;
  size_t n_modifiers;
  DmParticleDDF__Modifier **modifiers;
};
#define DM_PARTICLE_DDF__PARTICLE_FX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_particle_ddf__particle_fx__descriptor) \
    , 0,NULL, 0,NULL }


/* DmParticleDDF__SplinePoint methods */
void   dm_particle_ddf__spline_point__init
                     (DmParticleDDF__SplinePoint         *message);
size_t dm_particle_ddf__spline_point__get_packed_size
                     (const DmParticleDDF__SplinePoint   *message);
size_t dm_particle_ddf__spline_point__pack
                     (const DmParticleDDF__SplinePoint   *message,
                      uint8_t             *out);
size_t dm_particle_ddf__spline_point__pack_to_buffer
                     (const DmParticleDDF__SplinePoint   *message,
                      ProtobufCBuffer     *buffer);
DmParticleDDF__SplinePoint *
       dm_particle_ddf__spline_point__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_particle_ddf__spline_point__free_unpacked
                     (DmParticleDDF__SplinePoint *message,
                      ProtobufCAllocator *allocator);
/* DmParticleDDF__Modifier__Property methods */
void   dm_particle_ddf__modifier__property__init
                     (DmParticleDDF__Modifier__Property         *message);
/* DmParticleDDF__Modifier methods */
void   dm_particle_ddf__modifier__init
                     (DmParticleDDF__Modifier         *message);
size_t dm_particle_ddf__modifier__get_packed_size
                     (const DmParticleDDF__Modifier   *message);
size_t dm_particle_ddf__modifier__pack
                     (const DmParticleDDF__Modifier   *message,
                      uint8_t             *out);
size_t dm_particle_ddf__modifier__pack_to_buffer
                     (const DmParticleDDF__Modifier   *message,
                      ProtobufCBuffer     *buffer);
DmParticleDDF__Modifier *
       dm_particle_ddf__modifier__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_particle_ddf__modifier__free_unpacked
                     (DmParticleDDF__Modifier *message,
                      ProtobufCAllocator *allocator);
/* DmParticleDDF__Emitter__Property methods */
void   dm_particle_ddf__emitter__property__init
                     (DmParticleDDF__Emitter__Property         *message);
/* DmParticleDDF__Emitter__ParticleProperty methods */
void   dm_particle_ddf__emitter__particle_property__init
                     (DmParticleDDF__Emitter__ParticleProperty         *message);
/* DmParticleDDF__Emitter methods */
void   dm_particle_ddf__emitter__init
                     (DmParticleDDF__Emitter         *message);
size_t dm_particle_ddf__emitter__get_packed_size
                     (const DmParticleDDF__Emitter   *message);
size_t dm_particle_ddf__emitter__pack
                     (const DmParticleDDF__Emitter   *message,
                      uint8_t             *out);
size_t dm_particle_ddf__emitter__pack_to_buffer
                     (const DmParticleDDF__Emitter   *message,
                      ProtobufCBuffer     *buffer);
DmParticleDDF__Emitter *
       dm_particle_ddf__emitter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_particle_ddf__emitter__free_unpacked
                     (DmParticleDDF__Emitter *message,
                      ProtobufCAllocator *allocator);
/* DmParticleDDF__ParticleFX methods */
void   dm_particle_ddf__particle_fx__init
                     (DmParticleDDF__ParticleFX         *message);
size_t dm_particle_ddf__particle_fx__get_packed_size
                     (const DmParticleDDF__ParticleFX   *message);
size_t dm_particle_ddf__particle_fx__pack
                     (const DmParticleDDF__ParticleFX   *message,
                      uint8_t             *out);
size_t dm_particle_ddf__particle_fx__pack_to_buffer
                     (const DmParticleDDF__ParticleFX   *message,
                      ProtobufCBuffer     *buffer);
DmParticleDDF__ParticleFX *
       dm_particle_ddf__particle_fx__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_particle_ddf__particle_fx__free_unpacked
                     (DmParticleDDF__ParticleFX *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DmParticleDDF__SplinePoint_Closure)
                 (const DmParticleDDF__SplinePoint *message,
                  void *closure_data);
typedef void (*DmParticleDDF__Modifier__Property_Closure)
                 (const DmParticleDDF__Modifier__Property *message,
                  void *closure_data);
typedef void (*DmParticleDDF__Modifier_Closure)
                 (const DmParticleDDF__Modifier *message,
                  void *closure_data);
typedef void (*DmParticleDDF__Emitter__Property_Closure)
                 (const DmParticleDDF__Emitter__Property *message,
                  void *closure_data);
typedef void (*DmParticleDDF__Emitter__ParticleProperty_Closure)
                 (const DmParticleDDF__Emitter__ParticleProperty *message,
                  void *closure_data);
typedef void (*DmParticleDDF__Emitter_Closure)
                 (const DmParticleDDF__Emitter *message,
                  void *closure_data);
typedef void (*DmParticleDDF__ParticleFX_Closure)
                 (const DmParticleDDF__ParticleFX *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    dm_particle_ddf__emitter_type__descriptor;
extern const ProtobufCEnumDescriptor    dm_particle_ddf__play_mode__descriptor;
extern const ProtobufCEnumDescriptor    dm_particle_ddf__emission_space__descriptor;
extern const ProtobufCEnumDescriptor    dm_particle_ddf__emitter_key__descriptor;
extern const ProtobufCEnumDescriptor    dm_particle_ddf__particle_key__descriptor;
extern const ProtobufCEnumDescriptor    dm_particle_ddf__modifier_type__descriptor;
extern const ProtobufCEnumDescriptor    dm_particle_ddf__modifier_key__descriptor;
extern const ProtobufCEnumDescriptor    dm_particle_ddf__blend_mode__descriptor;
extern const ProtobufCEnumDescriptor    dm_particle_ddf__size_mode__descriptor;
extern const ProtobufCEnumDescriptor    dm_particle_ddf__particle_orientation__descriptor;
extern const ProtobufCMessageDescriptor dm_particle_ddf__spline_point__descriptor;
extern const ProtobufCMessageDescriptor dm_particle_ddf__modifier__descriptor;
extern const ProtobufCMessageDescriptor dm_particle_ddf__modifier__property__descriptor;
extern const ProtobufCMessageDescriptor dm_particle_ddf__emitter__descriptor;
extern const ProtobufCMessageDescriptor dm_particle_ddf__emitter__property__descriptor;
extern const ProtobufCMessageDescriptor dm_particle_ddf__emitter__particle_property__descriptor;
extern const ProtobufCMessageDescriptor dm_particle_ddf__particle_fx__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_particle_2fparticle_5fddf_2eproto__INCLUDED */

/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: script/lua_source_ddf.proto */

#ifndef PROTOBUF_C_script_2flua_5fsource_5fddf_2eproto__INCLUDED
#define PROTOBUF_C_script_2flua_5fsource_5fddf_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct DmLuaDDF__LuaSource DmLuaDDF__LuaSource;


/* --- enums --- */


/* --- messages --- */

struct  DmLuaDDF__LuaSource
{
  ProtobufCMessage base;
  /*
   * HTML platforms uses script (vanilla lua), all
   * other platforms uses bytecode instead.
   */
  protobuf_c_boolean has_script;
  ProtobufCBinaryData script;
  /*
   * Path to the original file; used for debugging.
   * Note that if bytecode is supplied from LuaJIT it will contain embedded
   * chunk names that override this file name and this field is not used.
   */
  char *filename;
  /*
   * Used when we bundle bytecode+delta AND when we bundle
   * only bytecode for a single architecture
   */
  protobuf_c_boolean has_bytecode;
  ProtobufCBinaryData bytecode;
  protobuf_c_boolean has_delta;
  ProtobufCBinaryData delta;
  /*
   * These two are used when we bundle without a bytecode
   * delta and for more than one architecture
   */
  protobuf_c_boolean has_bytecode_32;
  ProtobufCBinaryData bytecode_32;
  protobuf_c_boolean has_bytecode_64;
  ProtobufCBinaryData bytecode_64;
};
#define DM_LUA_DDF__LUA_SOURCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dm_lua_ddf__lua_source__descriptor) \
    , 0, {0,NULL}, NULL, 0, {0,NULL}, 0, {0,NULL}, 0, {0,NULL}, 0, {0,NULL} }


/* DmLuaDDF__LuaSource methods */
void   dm_lua_ddf__lua_source__init
                     (DmLuaDDF__LuaSource         *message);
size_t dm_lua_ddf__lua_source__get_packed_size
                     (const DmLuaDDF__LuaSource   *message);
size_t dm_lua_ddf__lua_source__pack
                     (const DmLuaDDF__LuaSource   *message,
                      uint8_t             *out);
size_t dm_lua_ddf__lua_source__pack_to_buffer
                     (const DmLuaDDF__LuaSource   *message,
                      ProtobufCBuffer     *buffer);
DmLuaDDF__LuaSource *
       dm_lua_ddf__lua_source__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dm_lua_ddf__lua_source__free_unpacked
                     (DmLuaDDF__LuaSource *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DmLuaDDF__LuaSource_Closure)
                 (const DmLuaDDF__LuaSource *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor dm_lua_ddf__lua_source__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_script_2flua_5fsource_5fddf_2eproto__INCLUDED */
